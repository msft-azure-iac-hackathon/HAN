{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appServicePlanName": {
            "type": "string",
            "metadata": {
                "description": "Name of the App Service Plan"
            }
        },
        "appServiceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the App Service"
            }
        },
        "appInsightsInstrumentationKey": {
            "type": "string",
            "metadata": {
                "description": "Instrumentation Key of the App Insights"
            }
        },
        "appInsightsConnectionString": {
            "type": "string",
            "metadata": {
                "description": "Connection String of the App Insights"
            }
        },
        "linuxFxVersion": {
            "type": "string",
            "metadata": {
                "description": "LinuxFxVersion of the App Service"
            }
        },
        "kind": {
            "type": "string",
            "metadata": {
                "description": "Kind of the App Service"
            }
        },
        "sku": {
            "type": "object",
            "metadata": {
                "description": "SKU of the App Service"
            }
        },
        "keyVaultId": {
            "type": "string",
            "metadata": {
                "description": "Id of the Key Vault"
            }
        },
        "managedIdentityName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Managed Identity"
            }
        },
        "DBConnectionStringSecretURI": {
            "type": "string",
            "metadata": {
                "description": "Secret URI of the DB Connection String"
            }
        }
    },
    "functions": [],
    "variables": {
        "DBConnectionString": "[concat('@Microsoft.KeyVault(SecretUri=', parameters('DBConnectionStringSecretURI'), ')')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('managedIdentityName')]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(resourceGroup().id, parameters('appServiceName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
            ],
            "scope": "[parameters('keyVaultId')]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('appServicePlanName')]",
            "location": "[resourceGroup().location]",
            "kind": "[parameters('kind')]",
            "properties": {
                "name": "[parameters('appServicePlanName')]",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1",
                "reserved": true,
                "zoneRedundant": false
            },
            "sku": "[parameters('sku')]"
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('appServiceName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            ],
            "identity": {
                "type": "SystemAssigned, UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]": {}
                }
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "clientAffinityEnabled": false,
                "httpsOnly": true,
                "publicNetworkAccess": "Enabled",
                "keyVaultReferenceIdentity":"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[parameters('appInsightsInstrumentationKey')]"
                        },
                        {
                            "name": "APPINSIGHTS_CONNECTION_STRING",
                            "value": "[parameters('appInsightsConnectionString')]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_Mode",
                            "value": "Recommended"
                        }
                    ],
                    "connectionStrings": [
                        {
                            "name": "DatabaseConnection",
                            "connectionString": "[variables('DBConnectionString')]",
                            "type": "SQLAzure"
                        }
                    ],
                    "linuxFxVersion": "[parameters('linuxFxVersion')]",
                    "alwaysOn": true,
                    "ftpsState": "FtpsOnly"
                }
            }
        }
    ],
    "outputs": {
        "appServiceSystemAssignedIdentity": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2022-03-01', 'Full').principalId]"
        }
    }
}