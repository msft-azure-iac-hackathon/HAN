name: Deploy the Azure Infrastructure

on:
  workflow_call:

jobs:
  core-infrastructure-rollout:
    runs-on: [self-hosted, linux]
    environment: han
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: azure/login@v1
        name: Azure OIDC login
        with:         
          tenant-id: ${{ secrets.TENANT_ID }}
          client-id: ${{ secrets.CLIENT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: true
      
      - uses: azure/arm-deploy@v1
        name: Create the Resource Group for the Infrastructure
        id: resourceGroup
        with:
          scope: subscription
          region: westeurope
          subscriptionId: ${{ vars.SUBSCRIPTION_ID }}
          template: infrastructure/resourceGroup.json
          parameters: infrastructure/resourceGroup.params.json

      - uses: azure/arm-deploy@v1 
        name: Create the Logging Infrastructure
        id: logging
        with:
          scope: resourcegroup
          region: westeurope
          resourceGroupName: ${{ steps.resourceGroup.outputs.resourceGroupName }}
          template: infrastructure/logging.json
          parameters: infrastructure/logging.params.json

      - uses: azure/arm-deploy@v1 
        name: Create the Key Vault
        id: keyVault
        with:
          scope: resourcegroup
          region: westeurope
          resourceGroupName: ${{ steps.resourceGroup.outputs.resourceGroupName }}
          template: infrastructure/keyvault.json
          parameters: >
            infrastructure/keyvault.params.json
      
      - uses: azure/arm-deploy@v1 
        name: Create the App Service
        id: appService
        with:
          scope: resourcegroup
          region: westeurope
          resourceGroupName: ${{ steps.resourceGroup.outputs.resourceGroupName }}
          template: infrastructure/appservice.json
          parameters: >
            infrastructure/appservice.params.json
            appInsightsInstrumentationKey="${{ steps.logging.outputs.applicationInsightsInstrumentationKey }}"
            appInsightsConnectionString="${{ steps.logging.outputs.applicationInsightsConnectionString }}"
            keyVaultId="${{ steps.keyVault.outputs.keyVaultId }}"